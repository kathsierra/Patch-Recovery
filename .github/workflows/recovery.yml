name: RECOVERY

on:
  workflow_dispatch:
    inputs:
      RECOVERY_URL:
        description: 'Lien direct vers recovery.img ou recovery.img.lz4'
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Check Out
        uses: actions/checkout@v4

      - name: Préparer l’environnement
        run: |
          sudo apt update
          sudo apt install -y git wget lz4 tar openssl python3 megatools

      - name: Télécharger l’image recovery
        run: |
          megadl "${{ github.event.inputs.RECOVERY_URL }}" --path recovery.img
      - name: Vérifier le fichier recovery.img
        run: |
         ls -lh recovery.img
         file recovery.img
         hexdump -C recovery.img | head -n 10

      - name: Patch Process 1
        run: |
          chmod +x script1.sh magiskboot
          ./script1.sh

      - name: Patch Process 2
        run: |
          chmod +x script2.sh
          ./script2.sh

          echo "✅ Fichiers présents après le script2.sh :"
          ls -lh

          if [ ! -f recovery-patched.img ]; then
            echo "❌ Fichier recovery-patched.img non généré."
            exit 1
          fi

          python3 avbtool extract_public_key --key phh.pem --output phh.pub.bin
          python3 avbtool add_hash_footer \
            --partition_name recovery \
            --partition_size $(wc -c < recovery.img) \
            --image recovery-patched.img \
            --key phh.pem \
            --algorithm SHA256_RSA4096

          mkdir -p output
          mv recovery-patched.img output/recovery.img
          cd output
          tar cf fastbootd-recovery.tar recovery.img
          md5sum fastbootd-recovery.tar >> fastbootd-recovery.tar
          mv fastbootd-recovery.tar fastbootd-recovery.tar.md5

      - name: Vérifier les fichiers générés
        run: |
          ls -lh output

      - name: Upload Recovery
        uses: actions/upload-artifact@v4
        with:
          path: output/*.md5
          name: Patched-Recovery
